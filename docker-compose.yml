version: '3'
services:

  blog:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: blog
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_HOST: '${MYSQL_HOST}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
    working_dir: /var/www/blog
    volumes:
      - ${APP_DIR}:/var/www/blog
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  admin:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: admin
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_HOST: '${MYSQL_HOST}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
    working_dir: /var/www/admin
    volumes:
      - ${CMS_DIR}:/var/www/admin
      - ${APP_DIR}:/var/www/blog
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  nginx-ingress:
    image: nginx:alpine
    container_name: ingress
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy_header.conf:/etc/nginx/proxy_header.conf
      - ${APP_DIR}:/var/www/blog
      - ${CMS_DIR}:/var/www/admin
    networks:
      - app-network

  nginx-blog:
    image: nginx:alpine
    container_name: blog-server
    restart: unless-stopped
    tty: true
    expose:
      - 80
    volumes:
     - ${APP_DIR}:/var/www/blog
     - ./nginx/blog/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  
  nginx-admin:
    image: nginx:alpine
    container_name: admin-server
    restart: unless-stopped
    tty: true
    expose:
      - 80
    volumes:
     - ${CMS_DIR}:/var/www/admin
     - ${APP_DIR}:/var/www/blog
     - ./nginx/admin/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_ALLOW_ROOT_PASSWORD: ${MYSQL_ALLOW_ROOT_PASSWORD}
    volumes:
      - ${APP_DIR}:/var/www/blog
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./.mysql:/var/lib/mysql
    networks:
      - app-network
    
  npm_build_tools:
    build:
      context: .
      dockerfile: ./npm_build_tools/Dockerfile
    container_name: npm_build_tools
    tty: true
    user:
      "1000:1000"
    working_dir: /var/www
    volumes:
      - ${APP_DIR}:/var/www
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
