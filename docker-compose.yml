services:
  app:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: app
    user:
      "1000:1000"
    working_dir: /var/www
    volumes:
      - ./app:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  server:
    image: nginx:alpine
    container_name: server
    ports:
      - "80:80"
      - "443:443"
    volumes:
     - ./app:/var/www
     - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  node_tools:
    build:
      context: .
      dockerfile: ./node_tools/Dockerfile
    container_name: node_tools
    tty: true
    user:
      "1000:1000"
    working_dir: /var/www
    volumes:
      - ./app:/var/www
    networks:
      - app-network

  root_tools:
    build:
      context: .
      dockerfile: ./root_tools/Dockerfile
    container_name: root_tools
    tty: true
    working_dir: /var/www
    volumes:
      - ./app:/var/www
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
